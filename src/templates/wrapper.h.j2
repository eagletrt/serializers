#ifndef {{ package.name.upper() }}_HPP
#define {{ package.name.upper() }}_HPP

#include "{{ package.name }}.pb.h"

#include <cstdint>
#include <string>
#include <vector>
#include <unordered_map>

namespace serializers
{

{% for message in messages -%}
struct {{ message.name }}
{
    {% for element in message.elements -%}
    {{ element.type }} {{ element.name }};
    {% endfor -%}

    {{ message.name }}() = default;
    {{ message.name }}(const bar::{{ message.name }}& proto);
    {% if package.name -%}
    operator {{ package.name }}::{{ message.name }}() const;
    {% else %}
    operator {{ message.name }}() const;
    {% endif %}
    std::string serializeAsProtobufString() const;
    std::string serializeAsJsonString() const;
    bool deserializeFromProtobufString(const std::string& str);
    bool deserializeFromJsonString(const std::string& str);
};

{% endfor -%}
}

#endif